using UnityEngine;

public class AxeAttack : MonoBehaviour
{
<<<<<<< HEAD
    public GameObject DamageSourceObject; 
    public float BaseDamage = 200f;
    public float RandomRange = 50f;
    public int CritChance = 15;
    public string EnemyTag = "Respawn";
=======
    void Update()
    {
        
    }
>>>>>>> origin/WarriorImprovmentsV3

    private void OnTriggerEnter(Collider collider)
    {
<<<<<<< HEAD
        Animator animator = DamageSourceObject.GetComponentInParent<Animator>();
        if (other.CompareTag(EnemyTag) && animator != null &&
            animator.GetCurrentAnimatorStateInfo(0).IsTag("Attack"))
        {
            GetComponent<AudioSource>().Play();
            other.gameObject.SendMessage("DealCriticlaDamage",
                new DamageParameters
                {
                    damageAmount = BaseDamage + Random.Range(-RandomRange, RandomRange), duration = 1f,
                    slowDownFactor = 0.6f, criticProbability = CritChance, showPopup = true,
                    damageSourceObject = DamageSourceObject
                });
=======
        if (collider.tag == "Respawn" && (GetComponentInParent<Animator>().GetCurrentAnimatorStateInfo(1).IsTag("Attack") || GetComponentInParent<Animator>().GetCurrentAnimatorStateInfo(0).IsTag("Attack")))
        {
            GetComponent<AudioSource>().Play();
            if (GetComponentInParent<Animator>().GetCurrentAnimatorStateInfo(1).IsName("Light Attack"))
                collider.gameObject.SendMessage("DealCriticlaDamage", new DamageParameters
                {
                    damageAmount = 150f + Random.Range(-10, 10),
                    duration = 1f,
                    slowDownFactor = 0.6f,
                    criticProbability = 10,
                    showPopup = true,
                    damageSourceObject = GameObject.FindGameObjectWithTag("Player")
                });
            else if (GetComponentInParent<Animator>().GetCurrentAnimatorStateInfo(0).IsName("StrongAttack - Running"))
                collider.gameObject.SendMessage("DealCriticlaDamage", new DamageParameters
                {
                    damageAmount = 400f,
                    duration = 5f,
                    slowDownFactor = 1f,
                    criticProbability = 10,
                    showPopup = true,
                    damageSourceObject = GameObject.FindGameObjectWithTag("Player")
                });
            else
                collider.gameObject.SendMessage("DealCriticlaDamage", new DamageParameters
                {
                    damageAmount = 300f + Random.Range(-20, 20),
                    duration = 1.5f,
                    slowDownFactor = 1f,
                    criticProbability = 10,
                    showPopup = true,
                    damageSourceObject = GameObject.FindGameObjectWithTag("Player")
                });

            collider.gameObject.GetComponent<Rigidbody>().AddForce((collider.gameObject.transform.position - GameObject.FindGameObjectWithTag("Player").transform.position) * 25, ForceMode.Impulse);
>>>>>>> origin/WarriorImprovmentsV3
        }
    }
}
